[{"/Users/prushak/Sites/innowise_task_8/front_end/src/index.js":"1","/Users/prushak/Sites/innowise_task_8/front_end/src/App.js":"2","/Users/prushak/Sites/innowise_task_8/front_end/src/store/index.js":"3","/Users/prushak/Sites/innowise_task_8/front_end/src/components/Bill.jsx":"4","/Users/prushak/Sites/innowise_task_8/front_end/src/vars/validations.js":"5","/Users/prushak/Sites/innowise_task_8/front_end/src/vars/vars.js":"6","/Users/prushak/Sites/innowise_task_8/front_end/src/vars/errors.js":"7","/Users/prushak/Sites/innowise_task_8/front_end/src/vars/api.js":"8","/Users/prushak/Sites/innowise_task_8/front_end/src/vars/api-type.js":"9","/Users/prushak/Sites/innowise_task_8/front_end/src/store/productSlice.js":"10","/Users/prushak/Sites/innowise_task_8/front_end/src/components/Form.jsx":"11","/Users/prushak/Sites/innowise_task_8/front_end/src/components/blocks/BlockForm.jsx":"12","/Users/prushak/Sites/innowise_task_8/front_end/src/components/Header.jsx":"13","/Users/prushak/Sites/innowise_task_8/front_end/src/components/Footer.jsx":"14"},{"size":365,"mtime":1659571100856,"results":"15","hashOfConfig":"16"},{"size":547,"mtime":1659571104198,"results":"17","hashOfConfig":"16"},{"size":172,"mtime":1659552673629,"results":"18","hashOfConfig":"16"},{"size":1240,"mtime":1659571734785,"results":"19","hashOfConfig":"16"},{"size":187,"mtime":1659552353410,"results":"20","hashOfConfig":"16"},{"size":358,"mtime":1659561449597,"results":"21","hashOfConfig":"16"},{"size":226,"mtime":1659552350789,"results":"22","hashOfConfig":"16"},{"size":289,"mtime":1659572077365,"results":"23","hashOfConfig":"16"},{"size":83,"mtime":1659537564591,"results":"24","hashOfConfig":"16"},{"size":846,"mtime":1659552687539,"results":"25","hashOfConfig":"16"},{"size":3072,"mtime":1659570664308,"results":"26","hashOfConfig":"16"},{"size":2609,"mtime":1659564195321,"results":"27","hashOfConfig":"16"},{"size":281,"mtime":1659570598084,"results":"28","hashOfConfig":"16"},{"size":158,"mtime":1659572128022,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"gawx9a",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/prushak/Sites/innowise_task_8/front_end/src/index.js",[],[],[],"/Users/prushak/Sites/innowise_task_8/front_end/src/App.js",[],[],"/Users/prushak/Sites/innowise_task_8/front_end/src/store/index.js",[],[],[],"/Users/prushak/Sites/innowise_task_8/front_end/src/components/Bill.jsx",["78","79"],[],"import { Output } from '../components/blocks/BlockForm';\nimport { apiStore } from '../vars/api';\nimport { API_ROOT, API_STORE } from '../vars/api-type';\nimport { Link } from 'react-router-dom';\n\nconst Bill = () => {\n  let payload = JSON.parse(localStorage.getItem('bill'));\n  localStorage.clear();\n  const deadline = Math.floor(Math.random() * 10);\n  if (deadline === 0) deadline = 1;\n  const cost = Math.floor(Math.random() * 100);\n  if (cost === 0) cost = 10;\n\n  const saveData = e => {\n    e.preventDefault();\n    payload = { ...payload, deadline, cost };\n    apiStore(API_ROOT + API_STORE, payload);\n  };\n\n  return (\n    <section className='bill'>\n        <h1>Bill</h1>\n        <form onSubmit={e => saveData(e)} method='POST'>\n          {Object.entries(payload).map(item => {\n            return <Output name={item[0]} service={item[1]} />;\n          })}\n          <Output name='deadline' service={`${deadline} days`} />\n          <Output name='cost' service={`${cost}$`} />\n          <div className='btn-block'>\n            <input type='submit' value='send' className='btn' />\n            <Link to='/' className='btn'>\n              back\n            </Link>\n          </div>\n        </form>\n    </section>\n  );\n};\n\nexport default Bill;\n",[],"/Users/prushak/Sites/innowise_task_8/front_end/src/vars/validations.js",[],[],"/Users/prushak/Sites/innowise_task_8/front_end/src/vars/vars.js",[],[],[],"/Users/prushak/Sites/innowise_task_8/front_end/src/vars/errors.js",[],[],"/Users/prushak/Sites/innowise_task_8/front_end/src/vars/api.js",[],[],"/Users/prushak/Sites/innowise_task_8/front_end/src/vars/api-type.js",[],[],"/Users/prushak/Sites/innowise_task_8/front_end/src/store/productSlice.js",["80"],[],"import { createSlice } from '@reduxjs/toolkit';\nimport { BRAND_FRIDGE, BRAND_LAPTOP, BRAND_TVSET, BRAND_MOBILE } from '../vars/vars';\n\nconst productSlice = createSlice({\n  name: 'productSlice',\n  initialState: {\n    products: [],\n    list: {},\n  },\n  reducers: {\n    getBrand(state, action) {\n      switch (action.payload) {\n        case 'tv-set':\n          state.products = BRAND_TVSET;\n          break;\n        case 'fridge':\n          state.products = BRAND_FRIDGE;\n          break;\n        case 'laptop':\n          state.products = BRAND_LAPTOP;\n          break;\n        case 'mobile phone':\n          state.products = BRAND_MOBILE;\n          break;\n      }\n    },\n    getBill(state, action) {\n      state.list = action.payload;\n    },\n  },\n});\n\nexport const { getBrand, getBill } = productSlice.actions;\nexport default productSlice.reducer;\n","/Users/prushak/Sites/innowise_task_8/front_end/src/components/Form.jsx",[],[],"/Users/prushak/Sites/innowise_task_8/front_end/src/components/blocks/BlockForm.jsx",[],[],"/Users/prushak/Sites/innowise_task_8/front_end/src/components/Header.jsx",[],[],"/Users/prushak/Sites/innowise_task_8/front_end/src/components/Footer.jsx",[],[],{"ruleId":"81","severity":1,"message":"82","line":10,"column":23,"nodeType":"83","messageId":"84","endLine":10,"endColumn":31},{"ruleId":"81","severity":1,"message":"85","line":12,"column":19,"nodeType":"83","messageId":"84","endLine":12,"endColumn":23},{"ruleId":"86","severity":1,"message":"87","line":12,"column":7,"nodeType":"88","messageId":"89","endLine":25,"endColumn":8},"no-const-assign","'deadline' is constant.","Identifier","const","'cost' is constant.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]