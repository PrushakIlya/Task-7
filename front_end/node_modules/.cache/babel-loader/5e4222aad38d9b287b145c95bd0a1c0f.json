{"ast":null,"code":"var _jsxFileName = \"/Users/prushak/Sites/innowise_task_8/front_end/src/components/blocks/Input.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = props => {\n  const {\n    id,\n    name,\n    type\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input_block\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      name: id,\n      id: id,\n      className: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${id}_error`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n};\n_c = Input;\nexport const SelectOnChange = props => {\n  const {\n    types,\n    name,\n    getType\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    name: name,\n    id: name,\n    onChange: e => getType(e.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: name,\n      selected: true,\n      disabled: true,\n      children: \"Types\"\n    }, '1', false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), types.map((el, id) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: el,\n        children: el\n      }, `${id}+1`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c2 = SelectOnChange;\nexport const Select = props => {\n  const {\n    types,\n    name,\n    getType\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    name: name,\n    id: name,\n    onChange: e => getType(e.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: na,\n      selected: true,\n      disabled: true,\n      children: \"Types\"\n    }, '1', false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), types.map((el, id) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: el,\n        children: el\n      }, `${id}+1`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Select;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"SelectOnChange\");\n$RefreshReg$(_c3, \"Select\");","map":{"version":3,"names":["Input","props","id","name","type","SelectOnChange","types","getType","e","target","value","map","el","Select","na"],"sources":["/Users/prushak/Sites/innowise_task_8/front_end/src/components/blocks/Input.jsx"],"sourcesContent":["export const Input = props => {\n  const { id, name, type } = props;\n  return (\n    <div className='input_block'>\n      <label htmlFor={id}>{name}</label>\n      <input type={type} name={id} id={id} className={id} />\n      <div className={`${id}_error`}></div>\n    </div>\n  );\n};\n\nexport const SelectOnChange = props => {\n  const { types, name, getType } = props;\n  return (\n    <select name={name} id={name} onChange={e=>getType(e.target.value)}>\n      <option key='1' value={name} selected disabled>Types</option>\n      {types.map((el,id) => {\n        return <option key={`${id}+1`} value={el}>{el}</option>;\n      })}\n    </select>\n  );\n};\n\nexport const Select = props => {\n  const { types, name, getType } = props;\n  return (\n    <select name={name} id={name} onChange={e=>getType(e.target.value)}>\n      <option key='1' value={na} selected disabled>Types</option>\n      {types.map((el,id) => {\n        return <option key={`${id}+1`} value={el}>{el}</option>;\n      })}\n    </select>\n  );\n};\n"],"mappings":";;AAAA,OAAO,MAAMA,KAAK,GAAGC,KAAK,IAAI;EAC5B,MAAM;IAAEC,EAAF;IAAMC,IAAN;IAAYC;EAAZ,IAAqBH,KAA3B;EACA,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,wBACE;MAAO,OAAO,EAAEC,EAAhB;MAAA,UAAqBC;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAEC,IAAb;MAAmB,IAAI,EAAEF,EAAzB;MAA6B,EAAE,EAAEA,EAAjC;MAAqC,SAAS,EAAEA;IAAhD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAK,SAAS,EAAG,GAAEA,EAAG;IAAtB;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CATM;KAAMF,K;AAWb,OAAO,MAAMK,cAAc,GAAGJ,KAAK,IAAI;EACrC,MAAM;IAAEK,KAAF;IAASH,IAAT;IAAeI;EAAf,IAA2BN,KAAjC;EACA,oBACE;IAAQ,IAAI,EAAEE,IAAd;IAAoB,EAAE,EAAEA,IAAxB;IAA8B,QAAQ,EAAEK,CAAC,IAAED,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlD;IAAA,wBACE;MAAgB,KAAK,EAAEP,IAAvB;MAA6B,QAAQ,MAArC;MAAsC,QAAQ,MAA9C;MAAA;IAAA,GAAY,GAAZ;MAAA;MAAA;MAAA;IAAA,QADF,EAEGG,KAAK,CAACK,GAAN,CAAU,CAACC,EAAD,EAAIV,EAAJ,KAAW;MACpB,oBAAO;QAAwB,KAAK,EAAEU,EAA/B;QAAA,UAAoCA;MAApC,GAAc,GAAEV,EAAG,IAAnB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFA,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAVM;MAAMG,c;AAYb,OAAO,MAAMQ,MAAM,GAAGZ,KAAK,IAAI;EAC7B,MAAM;IAAEK,KAAF;IAASH,IAAT;IAAeI;EAAf,IAA2BN,KAAjC;EACA,oBACE;IAAQ,IAAI,EAAEE,IAAd;IAAoB,EAAE,EAAEA,IAAxB;IAA8B,QAAQ,EAAEK,CAAC,IAAED,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlD;IAAA,wBACE;MAAgB,KAAK,EAAEI,EAAvB;MAA2B,QAAQ,MAAnC;MAAoC,QAAQ,MAA5C;MAAA;IAAA,GAAY,GAAZ;MAAA;MAAA;MAAA;IAAA,QADF,EAEGR,KAAK,CAACK,GAAN,CAAU,CAACC,EAAD,EAAIV,EAAJ,KAAW;MACpB,oBAAO;QAAwB,KAAK,EAAEU,EAA/B;QAAA,UAAoCA;MAApC,GAAc,GAAEV,EAAG,IAAnB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFA,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAVM;MAAMW,M"},"metadata":{},"sourceType":"module"}