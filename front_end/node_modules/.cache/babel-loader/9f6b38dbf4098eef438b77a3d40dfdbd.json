{"ast":null,"code":"var _jsxFileName = \"/Users/prushak/Sites/innowise_task_8/front_end/src/components/blocks/Input.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = props => {\n  const {\n    id,\n    name,\n    type\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input_block\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"id\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      name: \"id\",\n      id: \"id\",\n      className: \"id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${id}_error`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n};\n_c = Input;\nexport const Select = props => {\n  c;\n  const {\n    types,\n    name\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    name: name,\n    id: name,\n    children: types.map(el => {\n      /*#__PURE__*/\n      _jsxDEV(\"option\", {\n        value: \"el\",\n        children: \"el\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Select;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"Select\");","map":{"version":3,"names":["Input","props","id","name","type","Select","c","types","map","el"],"sources":["/Users/prushak/Sites/innowise_task_8/front_end/src/components/blocks/Input.jsx"],"sourcesContent":["export const Input = props => {\n  const { id, name, type } = props;\n  return (\n    <div className='input_block'>\n      <label htmlFor='id'>{name}</label>\n      <input type={type} name='id' id='id' className='id' />\n      <div className={`${id}_error`}></div>\n    </div>\n  );\n};\n\n\nexport const Select = props => {\n  c\n  const { types, name } = props;\n  return (\n    <select name={name} id={name}>\n      {\n        types.map(el=>{\n          <option value=\"el\">el</option>\n        })\n      }\n    </select>\n  );\n};\n"],"mappings":";;AAAA,OAAO,MAAMA,KAAK,GAAGC,KAAK,IAAI;EAC5B,MAAM;IAAEC,EAAF;IAAMC,IAAN;IAAYC;EAAZ,IAAqBH,KAA3B;EACA,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,wBACE;MAAO,OAAO,EAAC,IAAf;MAAA,UAAqBE;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAEC,IAAb;MAAmB,IAAI,EAAC,IAAxB;MAA6B,EAAE,EAAC,IAAhC;MAAqC,SAAS,EAAC;IAA/C;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAK,SAAS,EAAG,GAAEF,EAAG;IAAtB;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CATM;KAAMF,K;AAYb,OAAO,MAAMK,MAAM,GAAGJ,KAAK,IAAI;EAC7BK,CAAC;EACD,MAAM;IAAEC,KAAF;IAASJ;EAAT,IAAkBF,KAAxB;EACA,oBACE;IAAQ,IAAI,EAAEE,IAAd;IAAoB,EAAE,EAAEA,IAAxB;IAAA,UAEII,KAAK,CAACC,GAAN,CAAUC,EAAE,IAAE;MACZ;MAAA;QAAQ,KAAK,EAAC,IAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IACD,CAFD;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAZM;MAAMJ,M"},"metadata":{},"sourceType":"module"}