{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { TYPES, BRAND_FRIDGE, BRAND_LAPTOP, BRAND_TVSET, BRAND_MOBILE } from '../components/vars';\nconst slice = createSlice({\n  name: 'todoSlice',\n  initialState: {\n    todos: []\n  },\n  reducers: {\n    getBrand(state, action) {\n      switch (action.payload) {\n        case 'tv-set':\n          state.todos = BRAND_TVSET;\n          break;\n\n        case 'fridge':\n          state.todos = BRAND_FRIDGE;\n          break;\n\n        case 'laptop':\n          state.todos = BRAND_LAPTOP;\n          break;\n\n        case 'mobile phone':\n          state.todos = BRAND_MOBILE;\n          break;\n      }\n    },\n\n    increment(state, action) {\n      state.todos += action.payload;\n    },\n\n    addTodo(state, action) {\n      console.log(state.todos.push); // console.log(action);\n\n      state.todos.push({\n        id: new Date().toISOString(),\n        text: action.payload,\n        checked: false\n      });\n      console.log(state.todos);\n    },\n\n    btnDelete(state, action) {},\n\n    check(state, action) {}\n\n  }\n});\nexport const {\n  getBrand\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","TYPES","BRAND_FRIDGE","BRAND_LAPTOP","BRAND_TVSET","BRAND_MOBILE","slice","name","initialState","todos","reducers","getBrand","state","action","payload","increment","addTodo","console","log","push","id","Date","toISOString","text","checked","btnDelete","check","actions","reducer"],"sources":["/Users/prushak/Sites/innowise_task_8/front_end/src/store/slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { TYPES, BRAND_FRIDGE, BRAND_LAPTOP, BRAND_TVSET, BRAND_MOBILE } from '../components/vars';\n\nconst slice = createSlice({\n  name: 'todoSlice',\n  initialState: {\n    todos: [],\n  },\n  reducers: {\n    getBrand(state, action) {\n      switch (action.payload) {\n        case 'tv-set':\n          state.todos = BRAND_TVSET;\n          break;\n        case 'fridge':\n          state.todos = BRAND_FRIDGE;\n          break;\n        case 'laptop':\n          state.todos = BRAND_LAPTOP;\n          break;\n        case 'mobile phone':\n          state.todos = BRAND_MOBILE;\n          break;\n      }\n    },\n    increment(state, action) {\n      state.todos += action.payload;\n    },\n    addTodo(state, action) {\n      console.log(state.todos.push);\n      // console.log(action);\n\n      state.todos.push({\n        id: new Date().toISOString(),\n        text: action.payload,\n        checked: false,\n      });\n      console.log(state.todos);\n    },\n    btnDelete(state, action) {},\n    check(state, action) {},\n  },\n});\n\nexport const { getBrand } = slice.actions;\nexport default slice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,EAAgBC,YAAhB,EAA8BC,YAA9B,EAA4CC,WAA5C,EAAyDC,YAAzD,QAA6E,oBAA7E;AAEA,MAAMC,KAAK,GAAGN,WAAW,CAAC;EACxBO,IAAI,EAAE,WADkB;EAExBC,YAAY,EAAE;IACZC,KAAK,EAAE;EADK,CAFU;EAKxBC,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACtB,QAAQA,MAAM,CAACC,OAAf;QACE,KAAK,QAAL;UACEF,KAAK,CAACH,KAAN,GAAcL,WAAd;UACA;;QACF,KAAK,QAAL;UACEQ,KAAK,CAACH,KAAN,GAAcP,YAAd;UACA;;QACF,KAAK,QAAL;UACEU,KAAK,CAACH,KAAN,GAAcN,YAAd;UACA;;QACF,KAAK,cAAL;UACES,KAAK,CAACH,KAAN,GAAcJ,YAAd;UACA;MAZJ;IAcD,CAhBO;;IAiBRU,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;MACvBD,KAAK,CAACH,KAAN,IAAeI,MAAM,CAACC,OAAtB;IACD,CAnBO;;IAoBRE,OAAO,CAACJ,KAAD,EAAQC,MAAR,EAAgB;MACrBI,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACH,KAAN,CAAYU,IAAxB,EADqB,CAErB;;MAEAP,KAAK,CAACH,KAAN,CAAYU,IAAZ,CAAiB;QACfC,EAAE,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EADW;QAEfC,IAAI,EAAEV,MAAM,CAACC,OAFE;QAGfU,OAAO,EAAE;MAHM,CAAjB;MAKAP,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACH,KAAlB;IACD,CA9BO;;IA+BRgB,SAAS,CAACb,KAAD,EAAQC,MAAR,EAAgB,CAAE,CA/BnB;;IAgCRa,KAAK,CAACd,KAAD,EAAQC,MAAR,EAAgB,CAAE;;EAhCf;AALc,CAAD,CAAzB;AAyCA,OAAO,MAAM;EAAEF;AAAF,IAAeL,KAAK,CAACqB,OAA3B;AACP,eAAerB,KAAK,CAACsB,OAArB"},"metadata":{},"sourceType":"module"}