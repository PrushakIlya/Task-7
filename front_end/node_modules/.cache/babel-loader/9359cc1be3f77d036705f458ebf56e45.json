{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst slice = createSlice({\n  name: 'todoSlice',\n  initialState: {\n    todos: []\n  },\n  reducers: {\n    addTodo(state, action) {\n      console.log(state.todos.push); // console.log(action);\n\n      state.todos.push({\n        checked: false\n      });\n      console.log(state.todos);\n    },\n\n    btnDelete(state, action) {},\n\n    check(state, action) {}\n\n  }\n});\nexport const {\n  addTodo,\n  btnDelete,\n  check\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","slice","name","initialState","todos","reducers","addTodo","state","action","console","log","push","checked","btnDelete","check","actions","reducer"],"sources":["/Users/prushak/Sites/innowise_task_8/front_end/src/store/slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst slice = createSlice({\n  name: 'todoSlice',\n  initialState: {\n    todos: [],\n  },\n  reducers: {\n    addTodo(state, action) {\n      console.log(state.todos.push);\n      // console.log(action);\n\n      state.todos.push({\n    \n        checked: false,\n      });\n      console.log(state.todos)\n    },\n    btnDelete(state, action) {},\n    check(state, action) {},\n  },\n});\n\nexport const { addTodo, btnDelete, check } = slice.actions;\nexport default slice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,IAAI,EAAE,WADkB;EAExBC,YAAY,EAAE;IACZC,KAAK,EAAE;EADK,CAFU;EAKxBC,QAAQ,EAAE;IACRC,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACrBC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACH,KAAN,CAAYO,IAAxB,EADqB,CAErB;;MAEAJ,KAAK,CAACH,KAAN,CAAYO,IAAZ,CAAiB;QAEfC,OAAO,EAAE;MAFM,CAAjB;MAIAH,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACH,KAAlB;IACD,CAVO;;IAWRS,SAAS,CAACN,KAAD,EAAQC,MAAR,EAAgB,CAAE,CAXnB;;IAYRM,KAAK,CAACP,KAAD,EAAQC,MAAR,EAAgB,CAAE;;EAZf;AALc,CAAD,CAAzB;AAqBA,OAAO,MAAM;EAAEF,OAAF;EAAWO,SAAX;EAAsBC;AAAtB,IAAgCb,KAAK,CAACc,OAA5C;AACP,eAAed,KAAK,CAACe,OAArB"},"metadata":{},"sourceType":"module"}